def MiraiAddition(key, key2, key3, add) {

fun add(key2, key3):key.

(*
equation forall key1:key2,key2:key2; add(key1, key2) = add(key2, key1).
*)

equiv(stucrypt(add))
    k1 <-R key2;
    k2 <-R key3;
    Okey() := return(add(k1, k2))
    <=(0)=>
    k1 <-R key;
    Okey() := return(k1).
}

def CustomXor(D, xor, zero) {

param nx.

fun xor(D,D):D.
const zero: D.
equation builtin ACUN(xor,zero).

(* Xor is a one-time pad *)

equiv(remove_xor(xor))
      foreach ix <= nx do a <-R D; Oxor(x:D) := return(xor(a,x))
      <=(0)=>
      foreach ix <= nx do a <-R D; Oxor(x:D) := return(a).

}
